name: Build and Release apk

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  actions: write
env:
  PROPERTIES_PATH: './android/key.properties'

jobs:
  process:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@main

      - name: Clone repo
        id: repo
        run: |
          echo $PWD
          echo $GITHUB_WORKSPACE
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          git clone --depth 1 https://github.com/lollipopkit/flutter_server_box.git /workdir
          cd /workdir
          echo $PWD
          echo "action_dir=$PWD" >> "$GITHUB_OUTPUT"
          echo "action_dir=$PWD" >> "$GITHUB_ENV"


      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'zulu'
          java-version: 17


      - name: Set up Flutter
        uses: subosito/flutter-action@main
        with:
          channel: 'stable'
          flutter-version: "3.27.2"

      - name: Set key
        run: |
          cd "$action_dir"
          echo $PWD
          echo keyPassword=\${{ secrets.STOREPASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.STOREPASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEYALIAS }} >> ${{env.PROPERTIES_PATH}}
          echo storeFile=key.jks >> ${{env.PROPERTIES_PATH}}
          echo "${{ secrets.KEYSTORE2 }}" | base64 --decode > android/app/key.jks


      # Get Flutter dependencies.
      - name: Get Flutter dependencies
        run: |
          cd "$action_dir"
          echo $PWD
          flutter pub get

      # Check for any formatting issues in the code.
      # - name: Check code formatting
      #   run: |
      #     cd "$action_dir"
      #     echo $PWD
      #     dart format --output=none .

      # Statically analyze the Dart code for any errors.
      # - name: Analyze Dart code
      #   run: |
      #     cd "$action_dir"
      #     echo $PWD
      #     flutter analyze .

      - name: Build arm64 APK
        run: |
          cd "$action_dir"
          echo $PWD
          #flutter build apk --release --target-platform=android-arm64
          flutter build apk --release --split-per-abi
          # dart run fl_build -p android
          cd build/app/outputs/flutter-apk/
          mv app-armeabi-v7a-release.apk flutter_server_box-armeabi-v7a.apk
          mv app-arm64-v8a-release.apk flutter_server_box-arm64-v8a.apk
      
      - name: Release apk
        uses: actions/upload-artifact@main
        with:
          name: flutter_server_box
          path: ${{ steps.repo.outputs.action_dir }}/build/app/outputs/flutter-apk/*.apk

      - name: Delete workflow runs
        uses: AoThen/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 5
